<?php
/**
 * Created by PhpStorm.
 * User: Stv
 * Date: 10/25/2016
 * Time: 1:44 PM
 */

namespace Ralphowino\LaravelAdmin\Commands;


use Illuminate\Console\Command;
use Illuminate\Support\Str;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;

class ResourceGenerator extends Command
{

    protected $name = 'resource:make';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Generates Model, Controller, Migration and Routes';


    protected $resources = ['controller', 'migration', 'views'];

    protected $generate = [];


    public function handle()
    {
        if (!$this->argument('name')) {
            $this->error('Missing required argument `name`');
            return false;
        }
        $this->parseOptions();

        $this->makeModel();
        foreach ($this->generate as $item){
            call_user_func([$this, 'make'.ucfirst($item)]);
        }

        $this->info("Resource " . $this->argument('name') . " generated successfully");
        return true;
    }

    protected function parseOptions()
    {
        $only = $this->resources;
        $except = [];

        if ($v = $this->option('only')) {
            $v = str_replace(' ', '', $v);
            $only = array_intersect(explode(',', $v), $this->resources);
        }

        if ($v = $this->option('except')) {
            $v = str_replace(' ', '', $v);
            $except = array_diff($this->resources, explode(',', $v));
        }

        $this->generate = array_merge($only, $except);
    }

    protected function makeModel()
    {
        $this->info('---------- GENERATING MODEL -----------');
        $this->call('resource:model', ['name' => $this->argument('name')]);
    }


    protected function makeMigration()
    {
        $this->info('---------- GENERATING MIGRATION -----------');
        $this->call('resource:migration', ['name' => $this->argument('name')]);
    }


    protected function makeController()
    {
        $this->info('---------- GENERATING CONTROLLER -----------');
        $this->call('resource:controller', ['name' => $this->argument('name')]);

    }

    protected function makeRoutes()
    {
    }

    protected function makeViews()
    {
        $this->info('---------- GENERATING VIEWS -----------');
        $this->call('resource:views', ['name' => $this->argument('name')]);
    }


    protected function getArguments()
    {
        return [
            ['name', null, InputArgument::REQUIRED, 'Name of the resource to generate']
        ];
    }

    protected function getOptions()
    {
        return [
            ['only', null, InputOption::VALUE_OPTIONAL, 'Choose to generate a controller, migration, views or all. Model is generated by default. Omitting this option generates all'],
            ['except', null, InputOption::VALUE_OPTIONAL, 'Opposite of `only` option']
        ];
    }
}